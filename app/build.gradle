apply plugin: 'com.android.application'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.jz.magazine"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias 'magazine_release'
            keyPassword '123456'
            storeFile file('H:\\Software\\Android\\magazine_app\\key\\release\\magazine_release.jks')
            storePassword '123456'
        }
        debug {
            keyAlias 'magazine_debug'
            keyPassword '123456'
            storeFile file('H:\\Software\\Android\\magazine_app\\key\\debug\\magazine_debug.jks')
            storePassword '123456'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
            useProguard false
        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }
    flavorDimensions "default"
    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            dimension "default"
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension "default"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    implementation "com.google.guava:guava:$rootProject.guavaVersion"

    //butterknife
    implementation "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    //dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    androidTestImplementation "com.google.dexmaker:dexmaker:$rootProject.ext.dexmakerVersion"
    androidTestImplementation "com.google.dexmaker:dexmaker-mockito:$rootProject.ext.dexmakerVersion"

    // Espresso UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso.idling:idling-concurrent:$rootProject.espressoVersion"
    implementation "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"

    // PushSDK必须依赖基础组件库，所以需要加入对应依赖
    implementation "com.umeng.umsdk:common:$rootProject.umengCommonVersion"
    // PushSDK必须依赖utdid库，所以需要加入对应依赖
    implementation "com.umeng.umsdk:utdid:$rootProject.umengUtdidVersion"
    // PushSDK
    implementation "com.umeng.umsdk:push:$rootProject.umengPushVersion"

    //ijkplayer
    // required, enough for most devices.
    implementation "tv.danmaku.ijk.media:ijkplayer-java:$rootProject.ijkplayerVersion"
    implementation "tv.danmaku.ijk.media:ijkplayer-armv7a:$rootProject.ijkplayerVersion"

    // Other ABIs: optional
    implementation "tv.danmaku.ijk.media:ijkplayer-armv5:$rootProject.ijkplayerVersion"
    implementation "tv.danmaku.ijk.media:ijkplayer-arm64:$rootProject.ijkplayerVersion"
    implementation "tv.danmaku.ijk.media:ijkplayer-x86:$rootProject.ijkplayerVersion"
    implementation "tv.danmaku.ijk.media:ijkplayer-x86_64:$rootProject.ijkplayerVersion"

    // ExoPlayer as IMediaPlayer: optional, experimental
    implementation "tv.danmaku.ijk.media:ijkplayer-exo:$rootProject.ijkplayerVersion"
}
